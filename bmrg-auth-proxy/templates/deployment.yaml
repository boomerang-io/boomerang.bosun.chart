{{- $platform := "bmrg" -}}
{{- $product := "auth" -}}
{{- $tier := "proxy" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bmrg.name" (dict "context" $ ) }}
  labels:
    {{- include "bmrg.labels.chart" (dict "context" $ ) | nindent 4 }}
spec:
  replicas: {{ .Values.image.replicaCount }}
  selector:
    matchLabels:
      {{- include "bmrg.labels.standard" (dict "context" . "platform" $platform "product" $product "tier" $tier "zone" .Values.general.zone) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bmrg.labels.standard" (dict "context" . "platform" $platform "product" $product "tier" $tier "zone" .Values.general.zone ) | nindent 8 }}
    spec:
      containers:
      - args:
      {{- if ne (default "" $.Values.auth.provider) "saml" }}
        - --provider={{ $.Values.auth.provider }}
        - --cookie-name={{ .Release.Name | replace "-" "_"}}
        - --redirect-url={{ $.Values.ingress.path }}/callback
        - --proxy-prefix={{ $.Values.ingress.path }}
        - --display-htpasswd-form={{ $.Values.auth.displayHtpasswdForm }}
        {{- if .Values.auth.args -}}
        {{- .Values.auth.args | toYaml | nindent 8 -}}
        {{- end -}}
        {{- if $.Values.auth.displayHtpasswdForm }}
        - --basic-auth-password=$(UPSTREAM_AUTH_PASSWORD)
        {{- end }}
        {{- if $.Values.redis.enabled }}
        - --session-store-type=redis
        - --redis-connection-url=redis://{{ .Release.Name }}-redis-master:{{ $.Values.redis.redisPort }}
        {{- end }}
        {{- if $.Values.authorization.allowEmailList.enabled }}
        - --authenticated-emails-file=/etc/oauth2-proxy/authenticated-emails-list
        {{- end }}
        {{- include "bmrg.authorization.email-domains" $ }}
        {{- end }}
        image: "{{ $.Values.image.registry }}{{ .Values.services.authProxy.image.repository }}:{{ .Values.services.authProxy.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        name: {{ .Chart.Name }}
        {{- if $.Values.auth.displayHtpasswdForm }}
        env:
        - name: UPSTREAM_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "bmrg.name" (dict "context" $ "tier" "secrets" ) }}
              key: UPSTREAM_AUTH_PASSWORD
        {{- end }}
        {{- if eq (default "" $.Values.auth.provider) "saml" }}
        env:
        - name: IDP_METADATA
          value: 'https://dev-x1ytqar3.eu.auth0.com/samlp/metadata/koboMFlVkV3NOE5HzrXFGBlDhE1rk2Fx?_ga=2.60530989.1605895873.1592395917-712389796.1585901826'
        # - name: IDP_METADATA
        #   value: 'https://gluu.idp.boomerangplatform.net/idp/shibboleth'
        - name: MELLON_PATH
          value: bmrg/mellon
        - name: REMOTE_USER_SAML_ATTRIBUTE
          value: login
        - name: SAML_MAP_EmailAddress
          value: X-WEBAUTH-EMAIL
        - name: SAML_MAP_FirstName
          value: X-WEBAUTH-FNAME
        - name: SAML_MAP_LastName
          value: X-WEBAUTH-LNAME
        - name: SERVICE_SUFFIX
          value: .{{ .Release.Namespace }}.svc.cluster.local
        {{- end }}
        ports:
        - name: {{ $platform }}-port-cntr
          {{- if eq (default "" $.Values.auth.provider) "saml" }}
          containerPort: 80
          protocol: TCP
          {{- else }}
          containerPort: 4180
          protocol: TCP
          {{- end }}
        volumeMounts:
        {{- if $.Values.auth.displayHtpasswdForm }}
          - mountPath: /opt/config
            name: htpasswd-data
        {{- end }}
        {{- if $.Values.authorization.allowEmailList.enabled }}
          - mountPath: /etc/oauth2-proxy
            name: auth-emails-data
        {{- end }}
        {{- if eq (default "" $.Values.auth.provider) "saml" }}
          - name: saml-volume
            mountPath: /etc/httpd/conf.d/saml_sp.cert
            subPath: saml_sp.cert
          - name: saml-volume
            mountPath: /etc/httpd/conf.d/saml_sp.key
            subPath: saml_sp.key
          - name: saml-volume
            mountPath: /etc/httpd/conf.d/saml_sp.xml
            subPath: saml_sp.xml
        {{- end }}
      volumes:
        {{- if $.Values.auth.displayHtpasswdForm }}
        - name: htpasswd-data
          configMap:
            name: {{ if $.Values.configMap.htpasswdData }}{{ $.Values.configMap.htpasswdData }}{{ else }}{{ include "bmrg.name" (dict "context" $ "component" "config" "tier" "htpasswd") }}{{ end }}
        {{- end }}
        {{- if and ($.Values.authorization.allowEmailList.enabled) (eq .Values.authorization.allowEmailList.persistence "configmap") }}
        - name: auth-emails-data
          configMap:
            name: {{ if $.Values.authorization.allowEmailList.name }}{{ $.Values.authorization.allowEmailList.name }}{{ else }}{{ include "bmrg.name" (dict "context" $ "component" "config" "tier" "allowemail") }}{{ end }}
            defaultMode: 420
        {{- end }}
        {{- if and ($.Values.authorization.allowEmailList.enabled) (eq .Values.authorization.allowEmailList.persistence "secret") }}
        - name: auth-emails-data
          secret:
            items:
            - key: authenticated-emails-list
              path: authenticated-emails-list
            secretName: {{ if $.Values.authorization.allowEmailList.name }}{{ $.Values.authorization.allowEmailList.name }}{{ else }}{{ include "bmrg.name" (dict "context" $ "component" "config" "tier" "allowemail") }}{{ end }}
        {{- end }}
        {{- if eq (default "" $.Values.auth.provider) "saml" }}
        - name: saml-volume
          configMap:
            name: {{ include "bmrg.name" (dict "context" $ "component" "config" "tier" "saml") }}
            items:
              - key: saml_sp.cert
                path: saml_sp.cert
              - key: saml_sp.key
                path: saml_sp.key
              - key: saml_sp.xml
                path: saml_sp.xml
        {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
    {{- include "bmrg.config.node_selector" $ }}
    {{- include "bmrg.config.affinity" $ }}
    {{- include "bmrg.config.tolerations" $ }}
