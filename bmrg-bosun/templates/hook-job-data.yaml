{{- $platform := "bmrg" -}}
{{- $product := "bosun" -}}
{{- $tier := "util" -}}
{{- $component := "data" -}}
{{- $context := . -}}
{{- if $.Values.job.data.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "bmrg.name" (dict "context" $context "tier" $tier "component" $component ) }}
  labels:
    name: {{ include "bmrg.name" (dict "context" $context "tier" $tier "component" $component ) }}
    {{- include "bmrg.labels.chart" (dict "context" $context "tier" $tier "component" $component ) | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  backoffLimit: 1
  completions: 1
  template:
    metadata:
      labels:
        name: {{ include "bmrg.name" (dict "context" $context "tier" $tier "component" $component ) }}
        {{- include "bmrg.labels.standard" (dict "context" $context "platform" $platform "product" $product "tier" $tier "component" $component ) | nindent 8 }}
    spec:
      containers:
        - name: "pre-install-{{ $tier }}-cntr"
          image: "{{ .Values.image.registry }}{{ .Values.job.data.image.repository }}:{{ .Values.job.data.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
          - name: JAVA_OPTS
            value: "-Dspring.profiles.active={{ $.Values.job.data.profile }} -Dspring.data.mongodb.uri=mongodb://{{ $.Values.global.database.mongodb.user }}:${MONGODB_PASSWORD}@{{ $.Values.global.database.mongodb.host }}{{ if $.Values.global.database.mongodb.port }}:{{ $.Values.global.database.mongodb.port }}{{ end }}/{{ $.Values.global.database.mongodb.database }}{{ if $.Values.global.database.mongodb.args }}?{{ $.Values.global.database.mongodb.args }}{{ end }}"
          {{- if $.Values.global.database.mongodb.secretName }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.global.database.mongodb.secretName }}
                key: mongodb-password
          {{- end }}
          {{- if $.Values.global.database.mongodb.tlsSecretName }}
          volumeMounts:
          - name: cert-vol-mongodb
            readOnly: true
            mountPath: "/etc/certs"
          {{- end}}
          command:
          - "sh"
          - "-c"
          - "{{ if $.Values.global.database.mongodb.tlsSecretName }}$JAVA_HOME/bin/keytool -import -noprompt -trustcacerts -file /etc/certs/mongodb.crt -alias mongodbcrt -keystore ./cacerts -storepass changeit &&{{ end }} java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -Djavax.net.ssl.trustStore=./cacerts -Djavax.net.ssl.trustStorePassword=changeit -jar ./service.jar"
      {{- with $values.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if $.Values.global.database.mongodb.tlsSecretName }}
      volumes:
      - name: cert-vol-mongodb
        secret:
          secretName: {{ $.Values.global.database.mongodb.tlsSecretName }}
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      restartPolicy: Never
{{- end }}
