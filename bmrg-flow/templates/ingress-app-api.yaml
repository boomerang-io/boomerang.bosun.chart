{{- $platform := "bmrg" -}}
{{- $product := "flow" -}}
{{- $tier := "app-api" -}}
{{- $k := "workflow" -}}
{{- $values := .Values -}}
{{- $context := . -}}
{{- if $.Values.global.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "bmrg.name" (dict "context" $context "tier" $tier ) }}
  labels:
    {{- include "bmrg.labels.chart" (dict "context" $context "tier" $tier ) | nindent 4 }}
  annotations:
    {{- if eq $.Values.global.auth.enabled true }}
    {{- include "bmrg.ingress.config.auth_proxy_auth_annotations.global" $ | nindent 4 }}
    {{- end }}
    {{ $.Values.global.ingress.annotationsPrefix}}/proxy-connect-timeout: "600"
    {{ $.Values.global.ingress.annotationsPrefix}}/configuration-snippet: |
      {{- if $.Values.global.auth.enabled }}
      {{- include "bmrg.ingress.config.auth_proxy_access_control" $ | nindent 6 }}
      {{- include "bmrg.ingress.config.auth_proxy_authorization" $ | nindent 6 }}
      {{- include "bmrg.ingress.config.auth_proxy_user_email" $ | nindent 6 }}
      {{- end }}
      if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $http_origin;
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,PATCH,DELETE,OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;}
    {{ $.Values.global.ingress.annotationsPrefix}}/ssl-redirect: "true"
    {{ $.Values.global.ingress.annotationsPrefix}}/rewrite-target: /api/v2/$2
    {{ $.Values.global.ingress.annotationsPrefix}}/client-max-body-size: 1m
    {{ $.Values.global.ingress.annotationsPrefix}}/limit-rps: "10"
    {{ $.Values.global.ingress.annotationsPrefix}}/limit-rpm: "300"
    {{ $.Values.global.ingress.annotationsPrefix}}/limit-connections: "10"
    {{ $.Values.global.ingress.annotationsPrefix}}/use-regex: "true"
spec:
  ingressClassName: {{ $.Values.global.ingress.class}}
  rules:
    - host: {{ $.Values.global.ingress.host }}
      http:
        paths:
          - path: {{ if $.Values.global.ingress.root }}{{ $.Values.global.ingress.root }}{{- end }}/_api/v2(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ include "bmrg.name" (dict "context" $context "tier" "services" "component" $k ) }}
                port:
                  name: {{ $platform }}-port-svc
  tls:
    - hosts:
        - {{ $.Values.global.ingress.host }}
      {{- if $.Values.global.ingress.tlsSecretName }}
      secretName: {{ $.Values.global.ingress.tlsSecretName }}
      {{- end }}
---
{{- end }}
