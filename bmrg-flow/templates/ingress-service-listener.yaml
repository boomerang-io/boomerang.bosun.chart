{{- $platform := "bmrg" -}}
{{- $product := "flow" -}}
{{- $tier := "services" -}}
{{- $k := "listener" -}}
{{- $values := .Values -}}
{{- $context := . -}}
{{- if and $.Values.global.ingress.enabled $values.general.enable.eventing -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "bmrg.name" (dict "context" $context "tier" $tier "component" $k ) }}
  labels:
    {{- include "bmrg.labels.chart" (dict "context" $context "tier" $tier "component" $k ) | nindent 4 }}
  annotations:
    {{ $.Values.global.ingress.annotationsPrefix}}/ssl-redirect: "false"
    {{ $.Values.global.ingress.annotationsPrefix}}/rewrite-target: /{{ $k }}/$2
    {{ $.Values.global.ingress.annotationsPrefix}}/client-max-body-size: 1m
    {{ $.Values.global.ingress.annotationsPrefix}}/limit-rpm: "100"
    {{ $.Values.global.ingress.annotationsPrefix}}/limit-connections: "3"
    kubernetes.io/ingress.class: {{ $.Values.global.ingress.class}}
spec:
  rules:
    - host: {{ $.Values.global.ingress.host }}
      http:
        paths:
          - path: {{ if $.Values.global.ingress.root }}{{ $.Values.global.ingress.root }}{{- end }}/{{ $tier }}/{{ $k }}(/|$)(.*)
            backend:
              serviceName:  {{ include "bmrg.name" (dict "context" $context "tier" $tier "component" $k ) }}
              servicePort: {{ $platform }}-port-svc
  tls:
    - hosts:
        - {{ $.Values.global.ingress.host }}
      {{- if $.Values.global.ingress.tlsSecretName }}
      secretName: {{ $.Values.global.ingress.tlsSecretName }}
      {{- end }}
{{- end }}